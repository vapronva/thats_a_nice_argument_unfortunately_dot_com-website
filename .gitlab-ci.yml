stages:
  - test
  - build
  - assets-deploy

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/SAST-IaC.latest.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

build-api:
  stage: build
  image: docker.io/library/docker:24-git
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd api/
    - docker build -t "$CI_REGISTRY_IMAGE/api:latest" -f "./Dockerfile" --no-cache --pull "./"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker image push --all-tags "$CI_REGISTRY_IMAGE/api"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      exists:
        - api/Dockerfile
      changes:
        - api/**/*
        - api/*
        - .gitlab-ci.yml
        - docker-compose.yml

build-web:
  stage: build
  image: docker.io/library/docker:24-git
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd web/
    - docker build -t "$CI_REGISTRY_IMAGE/web:latest" -f "./Dockerfile" --no-cache --pull "./"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker image push --all-tags "$CI_REGISTRY_IMAGE/web"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      exists:
        - web/Dockerfile
      changes:
        - web/**/*
        - web/*
        - .gitlab-ci.yml
        - docker-compose.yml

deploy-storage:
  stage: assets-deploy
  image: docker.io/library/alpine:latest
  needs:
    - build-web
  before_script:
    - apk update && apk add ca-certificates && update-ca-certificates
    - apk add --no-cache wget openssl bash
    - apk add --update --no-cache nodejs npm
    - npm install uglifycss -g
    - npm install uglify-js -g
    - apk add --update --no-cache rclone
    - echo -e "$RCLONE_CONFIG" > rclone.conf
  script:
    - bash scripts/prepareAndPushStorage.sh
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - web/**/*
        - web/*
        - .gitlab-ci.yml
        - scripts/prepareAndPushStorage.sh
